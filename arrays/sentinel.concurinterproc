typedef dir = enum { left, hit, right, other };

var n: int, i: int, x: int, t: int, tmp: int, flag1: dir, flag3: dir, stop: bool; 

begin
  assume n>2;
  x=n-2;
  assume x>=0 and x<n;
  i=0;
  flag1 = other;
  while i<n do
    if x<i then
      flag1 = left;
    else
      if x>i then
        flag1 = right;
      else
        flag1 = hit;
        t=5;
      endif;
    endif;
    i=i+1;
  done;
  i = random;
  if x<n-2 then
  else
    if x>n-2 then
    else
      t=-1;
    endif;
  endif;
  i=0;
  stop=false;
  flag3 = other;
  while not stop do
    if i>=n then
      fail;
    endif;
    if x<i then
      tmp = random;
      flag3 = left;
    else
      if x>i then
        tmp = random;
        flag3 = right;
      else
        tmp = t;
        flag3 = hit;
      endif;
    endif;
    stop = tmp<0;
    if not stop then i=i+1; endif; 
  done;
  stop=random;
  flag1=random;
  flag3=random;
end